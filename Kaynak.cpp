#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <cmath>
#include <cstdlib>
#include <conio.h>
#include <sstream>
#include <ctime>
#include <fstream>
#define ll long long
#define macro(x) (x * ( x + 1) / 2)


using namespace std;

void f()
{
    int say1 = 0;
    int say2 = 1;
    int toplam = 0;
    int fib = 0;
    while(1)
    {
        fib = say1 + say2;
        say1 = say2;
        say2 = fib;
        if (fib >= 4000000)
        {
            break;
        }
        else if (fib % 2 == 0)
        {
            toplam += fib;
            cout << fib << endl;
        }       
    }
    cout << toplam;

}
void asal()
{
    unsigned short int sayac = 0;
    long long int toplam = 0;
    for (int i = 3; i < 2000000; i++) // son
    {
        if (i % 2 != 0)
        {
            unsigned int cl = ceil(sqrt(i)); // son 2 
            sayac = 0;
            int k = 2;
            for (; k < cl+1; k++)
            {
                if (i % k == 0)
                {
                    sayac++;
                    break;
                }
            }
            if (sayac == 0)
            {
                //cout << i << endl;
                toplam += i;
            }
        }
    }
    cout << toplam+2 << endl;
}
inline int DKX(int dizi[][20])
{
    long long int next = 1;
    long long int back = 1;
    int r = 0;
    int cpy[4];
    int array[4];
    for (int j = 0; j < 4; j++)
    {
         //cout << dizi[0][j];       // kýyaslamak icin baþlangýc degeri lazýmdý ilk 4 sayi carpýmý
         back *= (dizi[0][j]);
    }
   //cout<<back<<endl;
    for (int i = 0; i < 20; i++) // satýr
    {
        for (int k = 0; k < 17; k++) // sutun    
        {
            next = 1;
            int q = 0;
            for (; q < 4; q++)
            {
                
                cpy[q] = dizi[i][r];    // 4 elemanlý diziye 4 lü gruplarýmýzý attýk
                next *= cpy[q];         // ve elemanlarý carptýk
                r++;
               // cout << cpy[q] << " ";
            }
           
            r -= 3;                    // 4 lü grubu kaydýrmak icin r indisi 3 azaltýldý
            if (next > back)
            {
                for (int c = 0; c < 4; c++)
                {
                    array[c] = cpy[c];
                }
                back = next;
                //cout << back << endl;
            }
        }
        r = 0;  // satýrý basa alýp oradan devam etmesini sagladýk
    }
    /*for (int x : array)
    {
        cout << x << " ";
    }
    cout << endl;
    cout << back << endl;*/
    return back;
}
inline int DKY(int dizi[][20])
{
    long long int next = 1;
    long long int back2 = 1;
    int r = 0;
    int cpy[4];
    int array[4];
    for (int j = 0; j < 4; j++)
    {
        //cout << dizi[0][j];
        back2 *= (dizi[j][0]);
    }
    //cout<<back<<endl;
    for (int i = 0; i < 20; i++) // satir
    {
        for (int k = 0; k < 17; k++) // sutun
        {
            next = 1;
            int q = 0;
            for (; q < 4; q++)
            {

                cpy[q] = dizi[r][i];
                next *= cpy[q];
                r++;
                 //cout << cpy[q] << " ";
            }
            //cout << endl;
            r -= 3;
           
            if (next > back2)
            {
                for (int c = 0; c < 4; c++)
                {
                    array[c] = cpy[c];
                }     
                back2 = next;
                //cout << back << endl;
            }
        }
        r = 0;
    }
    /*for (int x : array)
    {
        cout << x << " ";
    }
    cout << endl;
    cout << back2 << endl;*/
    return back2;
}
inline int DKZ(int dizi[][20])
{
    long long int next = 1;
    long long int back3 = 1;
    int r = 16, f = 0, l = 1, a = 4,b = 3;
    int cpy[4],array[4];
   
    for (int j = 0; j < 4; j++)
    {
        //cout << dizi[j][j] << " ";
        back3 *= (dizi[r][f]);
        r++;
        f++;
    }
    r = 16;
    f = 0;
    //cout<<back<<endl;
   
        for (int k = 0; k < l; k++) // sutun
        {
            // cout << l << endl;
            if (l == 154)
            {
                break;
            }
            next = 1;
            int q = 0;
            for (; q < 4; q++)
            {
               // cout <<"r ve f:"<< r << " " << f << endl;
                cpy[q] = dizi[r][f];
                next *= cpy[q];
                //cout << cpy[q] << " ";
                if (q != 3)
                {
                    r++;
                    f++;
                }
            }
            //cout << endl;
            if (r==19)
            {
               
                r -= a;
                f -= (a-1);  // caprazlara gecerken yap
                a++;
               // cout << "----------------\n" << endl;
            }
            else
            {
                r -= 2;
                f -= 2;
            }
            if (next > back3)
            {
                for (int c = 0; c < 4; c++)
                {
                    array[c] = cpy[c];
                }
                back3 = next;
                //cout << back << endl;
            }
            l++;
            k = 0;
        }

        l = 1, r = 0, f = 16;
        for (int p = 0; p < l; p++)
        {
           
            // cout << l << endl;
            if (l == 137)
            {
                break;
            }
            next = 1;
            int q = 0;
            for (; q < 4; q++)
            {
                //cout << "r ve f:" << r << " " << f << endl;
                cpy[q] = dizi[r][f];
                next *= cpy[q];
                //cout << cpy[q] << " ";
                if (q != 3)
                {
                    r++;
                    f++;
                }
            }
            //cout << endl;
            if (f == 19)
            {

                r -= b;
                f -= (b + 1);  // caprazlara gecerken yap
                b++;
               //cout << "----------------\n" << endl;
            }
            else
            {
                r -= 2;
                f -= 2;
            }
            if (next > back3)
            {
                for (int c = 0; c < 4; c++)
                {
                    array[c] = cpy[c];
                }
                back3 = next;
                //cout << back << endl;
            }
            l++;
            p = 0;
        }
    
        //------------------------------
        back3 = 1;
        for (int j = 0; j < 4; j++)
        {
            r = 3; f = 0;
            //cout << dizi[j][j] << " ";
            back3 *= (dizi[r][f]);
            r--;
            f++;
        }

        l = 1; r = 3, f = 0;
        int m = 4;
        for (int k = 0; k < l; k++) // sutun
        {
            // cout << l << endl;
            if (l == 154)
            {                                      
                break;
            }
            next = 1;
            int q = 0;
            for (; q < 4; q++)
            {
                //cout <<"r ve f:"<< r << " " << f << endl;
                cpy[q] = dizi[r][f];
                next *= cpy[q];
                //cout << cpy[q] << " ";
                if (q != 3)
                {
                    r--;
                    f++;
                }
            }
            //cout << endl;
            if (r == 0)
            {

                r += m;
                f -= (m-1);  // caprazlara gecerken yap
                m++;
                // cout << "----------------\n" << endl;
            }
            else
            {
                r += 2;
                f -= 2;
            }
            if (next > back3)
            {
                for (int c = 0; c < 4; c++)
                {
                    array[c] = cpy[c];
                }
                back3 = next;
                //cout << back << endl;
            }
            l++;
            k = 0;
        }

        l = 1, r = 19, f = 16;
        int n = 3;
        for (int p = 0; p < l; p++)
        {

            // cout << l << endl;
            if (l == 137)
            {
                break;
            }
            next = 1;
            int q = 0;
            for (; q < 4; q++)
            {
                //cout << "r ve f:" << r << " " << f << endl;
                cpy[q] = dizi[r][f];
                next *= cpy[q];
                //cout << cpy[q] << " ";
                if (q != 3)
                {
                    r--;
                    f++;
                }
            }
            //cout << endl;
            if (f == 19)
            {

                r += n;
                f -= (n+1);  // caprazlara gecerken yap
                n++;
                //cout << "----------------\n" << endl;
            }
            else
            {
                r += 2;
                f -= 2;
            }
            if (next > back3)
            {
                for (int c = 0; c < 4; c++)
                {
                    array[c] = cpy[c];
                }
                back3 = next;
                //cout << back << endl;
            }
            l++;
            p = 0;
        }
       
    /*for (int x : array)
    {
        cout << x << " ";
    }
    cout << endl;
    cout << back << endl;*/
        return back3;
    




}
inline bool Uasal(unsigned int n)
{
    unsigned short int sayac = 0;
     
    if (n % 2 != 0 || n==2)
    {
        unsigned int cl = ceil(sqrt(n)); // son 2 
        sayac = 0;
        int k = 2;
        for (; k < cl + 1; k++)
        {
            if (n % k == 0)
            {
                sayac++;
                break;
            }
        }
        if (sayac == 0)
        {
           // cout << n << endl;
            return true;
            
        }
    }
}
inline void UCG()
{
    unsigned int sayi;
    unsigned int sayac = 2;
    for (int i = 1; true; i++)   // n*(n+1)/2
    {
        sayac = 1;
        sayi = macro(i);

        if (!Uasal(sayi) || sayi == 1)
        {
            int j = 1;
            if (sayi % 2 != 0 && j % 2 == 0)
            {
                j++;
            }
            for (; j <= sayi; j++)
            {
           
                if (sayi % j == 0)
                {
                    sayac++;
                    //cout << sayac << " " << sayi << " " << j << endl;
                }
                if (sayac > 500)
                {
                    cout << sayi << endl;
                    exit(0);
                }
            }
        }
    }
}
/*vector <int> v1;
//int* ptr = (int*)malloc(sizeof(int));
static unsigned int n = 2;
//static int indis = 0;
//static int l = 1;
unsigned int temp;

inline void Collatz()
{
    unsigned int  sayi, sayac = 1;
    bool x = true;
    sayi = n;
    
    while (x)
    {
        if (sayi % 2 == 0)
        {
            sayi /= 2;
            sayac++;

            if (sayi == 1)
            {
                v1.push_back(sayac);
                //ptr[indis] = sayac;
                //cout << "-----" << n << " " << sayac << " " << v1.size() << endl;
                //ptr = (int*)realloc(ptr, ++l * (sizeof(int)));
                
                n++;
                x = false;
            }
        }
        else
        {
            sayi = (3 * sayi) + 1;
            sayac++;

            if (sayi == 1)
            {
                v1.push_back(sayac);
                //ptr[indis] = sayac;
                //cout << "-----" << n << " " << sayac << " " << v1.size() << endl;
                // ptr = (int*)realloc(ptr, ++l * (sizeof(int)));
                n++;
                x = false;
            }
        }
    }
}

*/
inline void Voku()
{
    
    fstream dosya("e:\\dosya_islem_text\\Britanya_sayi_veritabani.txt",ios::in | ios::out);
    string kelime;
    unsigned int toplam = 0;
    if (dosya)
    {   
        
        while (!dosya.eof())
        {
            dosya >> kelime;
            toplam += kelime.length();
        }
    }
    else
    {
        cerr << "dosya bilinmeyen bir sebepten dolayi acilamiyor !" << endl;
    }

    cout << toplam - 86 << endl;
}
inline void Big()
{
    unsigned int dizi[][15] = {
    {75},
    {95,64},
    {17,47,82},
    {18,35,87,10},
    {20,4,82,47,65},
    {19,1,23,75,3,34},
    {88,2,77,73,7,63,67},
    {99,65,4,28,6,16,70,92},
    {41,41,26,56,83,40,80,70,33},
    {41,48,72,33,47,32,37,16,94,29},
    {53,71,44,65,25,43,91,52,97,51,14},
    {70,11,33,28,77,73,17,78,39,68,17,57},
    {91,71,52,38,17,14,91,43,58,50,27,29,48},
    {63,66,4,68,89,53,67,30,73,16,69,87,40,31},
    {4,62,98,27,23,9,70,98,73,93,38,53,60,4,23}
    };

    unsigned int l;
    cout << "matris satir sayisi (max):"; cin >> l;

    for (int i = l - 1; i >= 0; i--)
    {
        for (int j = 0; j < i; j++)
        {
            dizi[i-1][j]+=(dizi[i][j]>dizi[i][j+1] ? dizi[i][j]:dizi[i][j+1]);
        }
    }
    cout << dizi[0][0];
}
inline void Monday()
{
    unsigned int Ay[12] = { 31,28,31,30,31,30,31,31,30,31,30,31 };
    string Gun[7] = { "pazartesi","sali","carsamba","persembe","cuma","cumartesi","pazar" };
    unsigned int index = 1;
    unsigned int sayac = 0;
    string temp;// Gun[1]; // sali

    for (unsigned int i = 1901; i <= 2000; i++) // yýl
    { 
        if ((i % 4 == 0 && i % 100 != 0) || (i % 400 == 0)){ Ay[1] = 29; }
        else { Ay[1] = 28; }

        unsigned int j = 0;
        for (; j < 12; j++) // ay
        {
            unsigned int k = 0;
            for (; k < Ay[j]; k++) // gun
            {
                temp = Gun[index];
                index++;

                if (index > 6)
                {
                    index = 0;
                }
                
                if (k == 0 && temp == Gun[6])
                {
                    sayac++;
                   // cout << i << " " << j << " " << temp << " " << Ay[j] << endl;
                    
                }
            }
        }
    }

    cout << "Monday:" << sayac;
}
inline unsigned int Bagdasik(unsigned int x)
{
    unsigned long toplam = 0;
    for (unsigned int i = 1; i <= x / 2; i++)
    {
        if (x % i == 0)
        {
            toplam += i;        
        }
    }
    //cout << toplam << endl;
    return toplam;
}

vector <string> Name;
inline void NameScore()
{
    string kelime;

ifstream dosya("C:\\Users\\mert_\\Desktop\\p022_names.txt");

while (getline(dosya, kelime, ','))
{
    Name.push_back(kelime);
    //cout << kelime << " ";
}
dosya.close();

for (unsigned int i = 0; i < Name.size() - 1; i++)
{
    for (unsigned int j = 0; j < Name.size() - 1; j++)
    {
        if (Name[j] > Name[j + 1])
        {
            string temp = Name[j + 1];
            Name[j + 1] = Name[j];
            Name[j] = temp;
        }
    }
}
/*for (string m : Name)
{
    cout << m << " ";   // sýralanmýs hali
}*/
//cout << Name.size();
}

inline void NameScore_2()
{
    static unsigned long long int sum = 0, T = 0;
    string x;

    for (unsigned int i = 0; i < Name.size(); i++)
    {
        x = Name[i];
        sum = 0;

        unsigned int k = 1;

        for (; k < x.length() - 1; k++)
        {
            sum += (int)x[k] - 64;
        }
        sum *= (i + 1);
        T += sum;
    }
    cout << "Name Score:" << T << endl;
}

vector <unsigned int> RDN;
unsigned int RDN2[28123] = { 0 };

const unsigned int Limit = 28123;

inline void ResidualNumberDividing()
{
    unsigned int Toplam;

    for (unsigned int i = 1; i < Limit; i++)
    {
        Toplam = 1;
        for (unsigned int j = 2; j < ceil(sqrt(i)); )
        {
            if (i % j == 0)
            {
                Toplam += j;
                Toplam += i / j;
            }
            j++; 
            if (j*j == i) { Toplam += j; }
        }
        
        if (i < Toplam) { RDN.push_back(i); } // artýk
        //else if (i >= Toplam) { RDN2.push_back(i); }
    }

}

inline void ResiDualNumberEnd()
{
   
    for (unsigned int i = 0; i < RDN.size(); i++)
    {
        for (unsigned int m = i; m < RDN.size(); m++)
        {
            if (RDN[i] + RDN[m] < 28123)
            {

                RDN2[(RDN[i] + RDN[m])] = (RDN[i] + RDN[m]);

            }
        }
    }
    cout << RDN.size() << endl;
}
inline unsigned int ResiDualNumberEndTotal()
{
    unsigned int TOPLAM = 0, SÝZE = sizeof(RDN2) / sizeof(*RDN2);
    
    for (unsigned int i = 0; i < SÝZE; i++)
    {
        //cout << RDN2[i] << " ";
        if (RDN2[i] == 0) { TOPLAM += i; }
    }
    return TOPLAM;
}

int main()
{
    // soru 1
  /*  int toplam = 0;
    for (int i = 3; i < 1000; i++)
    {
        if (i % 3 == 0 || i % 5 == 0)
        {
            toplam += i;
        }
    }
    cout << toplam;
    */
    
    //---------------------------------------------
    
    // soru 2
   // f();

    //-------------------------------------------------


    // soru 3
    
      /*  long long int eb;
        long long int sayi = 600851475143;



        for (int i = 2; i < int(sqrt(sayi)); i++)
        {

            if (sayi / i == 1)
            {

                eb = i;

            }
            while (sayi % i == 0)
            {

                sayi /= i;

            }

        }

        cout << "En buyuk = " << sayi;

    */

    


    //---------------------------------
/*  unsigned int temp;
    unsigned int tut = 0;
    int a, b ,enes=0;
    for (int i = 10; i<=99; i++)
    {
        for (int j = 10; j <= 99; j++)
        {        
            temp = i * j;
            b = temp;
            while (temp > 0)
            {
                a = temp % 10;
                temp /= 10;
                tut = tut * 10 + a;
            }
            
            if (tut == b)
            {
                if (enes < tut)
                {
                    enes = tut;
                }
                //back = tut;
                //cout << back << endl;
            }
            tut = 0;
            
        }
    }
    cout << enes << endl;
    */
    //---------------------------------

    // soru 5
   
  /*  int i = 1;
    while (true)
    {
        int deger = 0;

        for (int a = 2; a <= 20; a++)
            deger = deger + i % a;

        if (deger == 0)
        {
            break;
        }
        else
        {
            i++;
        }
    }
        cout << i;
        */


    //---------------------------------
    // soru 6
      /*  long int x=0;
        long int y=0;
        long int sonuc;

     for (int i = 1; i <= 100; i++)
     {
         x += pow(i, 2);
         y += i;
     }

     sonuc = pow(y, 2) - x;
     cout << sonuc;
     */

    //---------------------------------

    // soru 8
   /* int sayi[] = {
    7,3,1,6,7,1,7,6,5,3,1,3,3,0,6,2,4,9,1,9,2,2,5,1,1,9,6,7,4,4,2,6,5,7,4,7,4,2,3,5,5,3,4,9,1,9,4,9,3,4,
    9,6,9,8,3,5,2,0,3,1,2,7,7,4,5,0,6,3,2,6,2,3,9,5,7,8,3,1,8,0,1,6,9,8,4,8,0,1,8,6,9,4,7,8,8,5,1,8,4,3,
    8,5,8,6,1,5,6,0,7,8,9,1,1,2,9,4,9,4,9,5,4,5,9,5,0,1,7,3,7,9,5,8,3,3,1,9,5,2,8,5,3,2,0,8,8,0,5,5,1,1,
    1,2,5,4,0,6,9,8,7,4,7,1,5,8,5,2,3,8,6,3,0,5,0,7,1,5,6,9,3,2,9,0,9,6,3,2,9,5,2,2,7,4,4,3,0,4,3,5,5,7,
    6,6,8,9,6,6,4,8,9,5,0,4,4,5,2,4,4,5,2,3,1,6,1,7,3,1,8,5,6,4,0,3,0,9,8,7,1,1,1,2,1,7,2,2,3,8,3,1,1,3,
    6,2,2,2,9,8,9,3,4,2,3,3,8,0,3,0,8,1,3,5,3,3,6,2,7,6,6,1,4,2,8,2,8,0,6,4,4,4,4,8,6,6,4,5,2,3,8,7,4,9,
    3,0,3,5,8,9,0,7,2,9,6,2,9,0,4,9,1,5,6,0,4,4,0,7,7,2,3,9,0,7,1,3,8,1,0,5,1,5,8,5,9,3,0,7,9,6,0,8,6,6,
    7,0,1,7,2,4,2,7,1,2,1,8,8,3,9,9,8,7,9,7,9,0,8,7,9,2,2,7,4,9,2,1,9,0,1,6,9,9,7,2,0,8,8,8,0,9,3,7,7,6, 
    6,5,7,2,7,3,3,3,0,0,1,0,5,3,3,6,7,8,8,1,2,2,0,2,3,5,4,2,1,8,0,9,7,5,1,2,5,4,5,4,0,5,9,4,7,5,2,2,4,3,
    5,2,5,8,4,9,0,7,7,1,1,6,7,0,5,5,6,0,1,3,6,0,4,8,3,9,5,8,6,4,4,6,7,0,6,3,2,4,4,1,5,7,2,2,1,5,5,3,9,7,
    5,3,6,9,7,8,1,7,9,7,7,8,4,6,1,7,4,0,6,4,9,5,5,1,4,9,2,9,0,8,6,2,5,6,9,3,2,1,9,7,8,4,6,8,6,2,2,4,8,2,
    8,3,9,7,2,2,4,1,3,7,5,6,5,7,0,5,6,0,5,7,4,9,0,2,6,1,4,0,7,9,7,2,9,6,8,6,5,2,4,1,4,5,3,5,1,0,0,4,7,4,
    8,2,1,6,6,3,7,0,4,8,4,4,0,3,1,9,9,8,9,0,0,0,8,8,9,5,2,4,3,4,5,0,6,5,8,5,4,1,2,2,7,5,8,8,6,6,6,8,8,1,
    1,6,4,2,7,1,7,1,4,7,9,9,2,4,4,4,2,9,2,8,2,3,0,8,6,3,4,6,5,6,7,4,8,1,3,9,1,9,1,2,3,1,6,2,8,2,4,5,8,6,
    1,7,8,6,6,4,5,8,3,5,9,1,2,4,5,6,6,5,2,9,4,7,6,5,4,5,6,8,2,8,4,8,9,1,2,8,8,3,1,4,2,6,0,7,6,9,0,0,4,2,
    2,4,2,1,9,0,2,2,6,7,1,0,5,5,6,2,6,3,2,1,1,1,1,1,0,9,3,7,0,5,4,4,2,1,7,5,0,6,9,4,1,6,5,8,9,6,0,4,0,8,
    0,7,1,9,8,4,0,3,8,5,0,9,6,2,4,5,5,4,4,4,3,6,2,9,8,1,2,3,0,9,8,7,8,7,9,9,2,7,2,4,4,2,8,4,9,0,9,1,8,8, 
    8,4,5,8,0,1,5,6,1,6,6,0,9,7,9,1,9,1,3,3,8,7,5,4,9,9,2,0,0,5,2,4,0,6,3,6,8,9,9,1,2,5,6,0,7,1,7,6,0,6, 
    0,5,8,8,6,1,1,6,4,6,7,1,0,9,4,0,5,0,7,7,5,4,1,0,0,2,2,5,6,9,8,3,1,5,5,2,0,0,0,5,5,9,3,5,7,2,9,7,2,5, 
    7,1,6,3,6,2,6,9,5,6,1,8,8,2,6,7,0,4,2,8,2,5,2,4,8,3,6,0,0,8,2,3,2,5,7,5,3,0,4,2,0,7,5,2,9,6,3,4,5,0
    };

    int cpy[13];
    long long int next=1;
    long long int back=1;
    int r = 0;
    
    for (int i = 0; i < 13; i++)
    {
        back *= sayi[i];
    }
    
    for(int k=0;k<988;k++)
    {
        
         next = 1;
         int j = 0;
         for (; j < 13; j++)
         {
             cpy[j] = sayi[r];
             next *= cpy[j];
             r++;
             cout  << cpy[j]<<"=";
         }
         
         cout << next << endl;
         r -= 12;
         
         if (next > back)
         {
             back = next;
         }
    }
        cout <<"son: "<< back << endl;*/

    //---------------------------------
   
    // soru 9

   

   /* for (unsigned short int i = 0; i < 1000; i++)
    {
        for (unsigned short int j = 0; j < 1000; j++)
        {
            for (unsigned short int k = 0; k < 1000; k++)
            {
                if (k < j && j < i)
                {
                    if ((k*k)+(j*j)==(i*i) && i-(int)i==0 && i+j+k==1000)
                    {
                        cout << i * j * k << endl;
                        
                    }
                }

            }
        }
    }*/

    //------------------------------------------
    
    // soru 10
    
    //asal();

    //------------------------------------------

    // soru 11
    
/*int matris[20][20] =
{
{8,2,22,97,38,15,0,40,0,75,4,5,7,78,52,12,50,77,91,8},
{49,49,99,40,17,81,18,57,60,87,17,40,98,43,69,48,4,56,62,0},
{81,49,31,73,55,79,14,29,93,71,40,67,53,88,30,3,49,13,36,65},
{52,70,95,23,4,60,11,42,69,24,68,56,1,32,56,71,37,2,36,91},
{22,31,16,71,51,67,63,89,41,92,36,54,22,40,40,28,66,33,13,80},
{24,47,32,60,99,3,45,2,44,75,33,53,78,36,84,20,35,17,12,50},
{32,98,81,28,64,23,67,10,26,38,40,67,59,54,70,66,18,38,64,70},
{67,26,20,68,2,62,12,20,95,63,94,39,63,8,40,91,66,49,94,21},
{24,55,58,5,66,73,99,26,97,17,78,78,96,83,14,88,34,89,63,72}, 
{21,36,23,9,75,0,76,44,20,45,35,14,0,61,33,97,34,31,33,95},
{78,17,53,28,22,75,31,67,15,94,3,80,4,62,16,14,9,53,56,92},
{16,39,5,42,96,35,31,47,55,58,88,24,0,17,54,24,36,29,85,57},
{86,56,0,48,35,71,89,7,5,44,44,37,44,60,21,58,51,54,17,58},
{19,80,81,68,5,94,47,69,28,73,92,13,86,52,17,77,4,89,55,40},
{4,52,8,83,97,35,99,16,7,97,57,32,16,26,26,79,33,27,98,66},
{88,36,68,87,57,62,20,72,3,46,33,67,46,55,12,32,63,93,53,69},
{4,42,16,73,38,25,39,11,24,94,72,18,8,46,29,32,40,62,76,36},
{20,69,36,41,72,30,23,88,34,62,99,69,82,67,59,85,74,4,36,16},
{20,73,35,29,78,31,90,1,74,31,49,71,48,86,81,16,23,57,5,54},
{1,70,54,71,83,51,54,69,16,92,33,48,61,43,52,1,89,19,67,48},
};
    int x[3] = { DKX(matris),DKY(matris),DKZ(matris) };

    int eb=x[0];
    for (int j = 0; j < 3; j++)
    {
        if (x[j] > eb)
        {
            eb = x[j];
        }
    }
    cout << eb << endl;*/
    //---------------------------------------------------------------------
    // soru 12
    
    // UCG();
    
    
    //---------------------------------------------------------------------
    // soru 13

   /* unsigned short int x[100][50] = {
        {3,7,1,0,7,2,8,7,5,3,3,9,0,2,1,0,2,7,9,8,7,9,7,9,9,8,2,2,0,8,3,7,5,9,0,2,4,6,5,1,0,1,3,5,7,4,0,2,5,0}, // 0 49 
        {4,6,3,7,6,9,3,7,6,7,7,4,9,0,0,0,9,7,1,2,6,4,8,1,2,4,8,9,6,9,7,0,0,7,8,0,5,0,4,1,7,0,1,8,2,6,0,5,3,8}, // 1 49
        {7,4,3,2,4,9,8,6,1,9,9,5,2,4,7,4,1,0,5,9,4,7,4,2,3,3,3,0,9,5,1,3,0,5,8,1,2,3,7,2,6,6,1,7,3,0,9,6,2,9},
        {9,1,9,4,2,2,1,3,3,6,3,5,7,4,1,6,1,5,7,2,5,2,2,4,3,0,5,6,3,3,0,1,8,1,1,0,7,2,4,0,6,1,5,4,9,0,8,2,5,0},
        {2,3,0,6,7,5,8,8,2,0,7,5,3,9,3,4,6,1,7,1,1,7,1,9,8,0,3,1,0,4,2,1,0,4,7,5,1,3,7,7,8,0,6,3,2,4,6,6,7,6},
        {8,9,2,6,1,6,7,0,6,9,6,6,2,3,6,3,3,8,2,0,1,3,6,3,7,8,4,1,8,3,8,3,6,8,4,1,7,8,7,3,4,3,6,1,7,2,6,7,5,7},
        {2,8,1,1,2,8,7,9,8,1,2,8,4,9,9,7,9,4,0,8,0,6,5,4,8,1,9,3,1,5,9,2,6,2,1,6,9,1,2,7,5,8,8,9,8,3,2,7,3,8},
        {4,4,2,7,4,2,2,8,9,1,7,4,3,2,5,2,0,3,2,1,9,2,3,5,8,9,4,2,2,8,7,6,7,9,6,4,8,7,6,7,0,2,7,2,1,8,9,3,1,8},
        {4,7,4,5,1,4,4,5,7,3,6,0,0,1,3,0,6,4,3,9,0,9,1,1,6,7,2,1,6,8,5,6,8,4,4,5,8,8,7,1,1,6,0,3,1,5,3,2,7,6},
        {7,0,3,8,6,4,8,6,1,0,5,8,4,3,0,2,5,4,3,9,9,3,9,6,1,9,8,2,8,9,1,7,5,9,3,6,6,5,6,8,6,7,5,7,9,3,4,9,5,1},
        {6,2,1,7,6,4,5,7,1,4,1,8,5,6,5,6,0,6,2,9,5,0,2,1,5,7,2,2,3,1,9,6,5,8,6,7,5,5,0,7,9,3,2,4,1,9,3,3,3,1},
        {6,4,9,0,6,3,5,2,4,6,2,7,4,1,9,0,4,9,2,9,1,0,1,4,3,2,4,4,5,8,1,3,8,2,2,6,6,3,3,4,7,9,4,4,7,5,8,1,7,8},
        {9,2,5,7,5,8,6,7,7,1,8,3,3,7,2,1,7,6,6,1,9,6,3,7,5,1,5,9,0,5,7,9,2,3,9,7,2,8,2,4,5,5,9,8,8,3,8,4,0,7},
        {5,8,2,0,3,5,6,5,3,2,5,3,5,9,3,9,9,0,0,8,4,0,2,6,3,3,5,6,8,9,4,8,8,3,0,1,8,9,4,5,8,6,2,8,2,2,7,8,2,8},
        {8,0,1,8,1,1,9,9,3,8,4,8,2,6,2,8,2,0,1,4,2,7,8,1,9,4,1,3,9,9,4,0,5,6,7,5,8,7,1,5,1,1,7,0,0,9,4,3,9,0},
        {3,5,3,9,8,6,6,4,3,7,2,8,2,7,1,1,2,6,5,3,8,2,9,9,8,7,2,4,0,7,8,4,4,7,3,0,5,3,1,9,0,1,0,4,2,9,3,5,8,6},
        {8,6,5,1,5,5,0,6,0,0,6,2,9,5,8,6,4,8,6,1,5,3,2,0,7,5,2,7,3,3,7,1,9,5,9,1,9,1,4,2,0,5,1,7,2,5,5,8,2,9},
        {7,1,6,9,3,8,8,8,7,0,7,7,1,5,4,6,6,4,9,9,1,1,5,5,9,3,4,8,7,6,0,3,5,3,2,9,2,1,7,1,4,9,7,0,0,5,6,9,3,8},
        {5,4,3,7,0,0,7,0,5,7,6,8,2,6,6,8,4,6,2,4,6,2,1,4,9,5,6,5,0,0,7,6,4,7,1,7,8,7,2,9,4,4,3,8,3,7,7,6,0,4},
        {5,3,2,8,2,6,5,4,1,0,8,7,5,6,8,2,8,4,4,3,1,9,1,1,9,0,6,3,4,6,9,4,0,3,7,8,5,5,2,1,7,7,7,9,2,9,5,1,4,5},
        {3,6,1,2,3,2,7,2,5,2,5,0,0,0,2,9,6,0,7,1,0,7,5,0,8,2,5,6,3,8,1,5,6,5,6,7,1,0,8,8,5,2,5,8,3,5,0,7,2,1},
        {4,5,8,7,6,5,7,6,1,7,2,4,1,0,9,7,6,4,4,7,3,3,9,1,1,0,6,0,7,2,1,8,2,6,5,2,3,6,8,7,7,2,2,3,6,3,6,0,4,5},
        {1,7,4,2,3,7,0,6,9,0,5,8,5,1,8,6,0,6,6,0,4,4,8,2,0,7,6,2,1,2,0,9,8,1,3,2,8,7,8,6,0,7,3,3,9,6,9,4,1,2},
        {8,1,1,4,2,6,6,0,4,1,8,0,8,6,8,3,0,6,1,9,3,2,8,4,6,0,8,1,1,1,9,1,0,6,1,5,5,6,9,4,0,5,1,2,6,8,9,6,9,2},
        {5,1,9,3,4,3,2,5,4,5,1,7,2,8,3,8,8,6,4,1,9,1,8,0,4,7,0,4,9,2,9,3,2,1,5,0,5,8,6,4,2,5,6,3,0,4,9,4,8,3},
        {6,2,4,6,7,2,2,1,6,4,8,4,3,5,0,7,6,2,0,1,7,2,7,9,1,8,0,3,9,9,4,4,6,9,3,0,0,4,7,3,2,9,5,6,3,4,0,6,9,1},
        {1,5,7,3,2,4,4,4,3,8,6,9,0,8,1,2,5,7,9,4,5,1,4,0,8,9,0,5,7,7,0,6,2,2,9,4,2,9,1,9,7,1,0,7,9,2,8,2,0,9},
        {5,5,0,3,7,6,8,7,5,2,5,6,7,8,7,7,3,0,9,1,8,6,2,5,4,0,7,4,4,9,6,9,8,4,4,5,0,8,3,3,0,3,9,3,6,8,2,1,2,6},
        {1,8,3,3,6,3,8,4,8,2,5,3,3,0,1,5,4,6,8,6,1,9,6,1,2,4,3,4,8,7,6,7,6,8,1,2,9,7,5,3,4,3,7,5,9,4,6,5,1,5},
        {8,0,3,8,6,2,8,7,5,9,2,8,7,8,4,9,0,2,0,1,5,2,1,6,8,5,5,5,4,8,2,8,7,1,7,2,0,1,2,1,9,2,5,7,7,6,6,9,5,4},
        {7,8,1,8,2,8,3,3,7,5,7,9,9,3,1,0,3,6,1,4,7,4,0,3,5,6,8,5,6,4,4,9,0,9,5,5,2,7,0,9,7,8,6,4,7,9,7,5,8,1},
        {1,6,7,2,6,3,2,0,1,0,0,4,3,6,8,9,7,8,4,2,5,5,3,5,3,9,9,2,0,9,3,1,8,3,7,4,4,1,4,9,7,8,0,6,8,6,0,9,8,4},
        {4,8,4,0,3,0,9,8,1,2,9,0,7,7,7,9,1,7,9,9,0,8,8,2,1,8,7,9,5,3,2,7,3,6,4,4,7,5,6,7,5,5,9,0,8,4,8,0,3,0},
        {8,7,0,8,6,9,8,7,5,5,1,3,9,2,7,1,1,8,5,4,5,1,7,0,7,8,5,4,4,1,6,1,8,5,2,4,2,4,3,2,0,6,9,3,1,5,0,3,3,2},
        {5,9,9,5,9,4,0,6,8,9,5,7,5,6,5,3,6,7,8,2,1,0,7,0,7,4,9,2,6,9,6,6,5,3,7,6,7,6,3,2,6,2,3,5,4,4,7,2,1,0},
        {6,9,7,9,3,9,5,0,6,7,9,6,5,2,6,9,4,7,4,2,5,9,7,7,0,9,7,3,9,1,6,6,6,9,3,7,6,3,0,4,2,6,3,3,9,8,7,0,8,5},
        {4,1,0,5,2,6,8,4,7,0,8,2,9,9,0,8,5,2,1,1,3,9,9,4,2,7,3,6,5,7,3,4,1,1,6,1,8,2,7,6,0,3,1,5,0,0,1,2,7,1},
        {6,5,3,7,8,6,0,7,3,6,1,5,0,1,0,8,0,8,5,7,0,0,9,1,4,9,9,3,9,5,1,2,5,5,7,0,2,8,1,9,8,7,4,6,0,0,4,3,7,5},
        {3,5,8,2,9,0,3,5,3,1,7,4,3,4,7,1,7,3,2,6,9,3,2,1,2,3,5,7,8,1,5,4,9,8,2,6,2,9,7,4,2,5,5,2,7,3,7,3,0,7},
        {9,4,9,5,3,7,5,9,7,6,5,1,0,5,3,0,5,9,4,6,9,6,6,0,6,7,6,8,3,1,5,6,5,7,4,3,7,7,1,6,7,4,0,1,8,7,5,2,7,5},
        {8,8,9,0,2,8,0,2,5,7,1,7,3,3,2,2,9,6,1,9,1,7,6,6,6,8,7,1,3,8,1,9,9,3,1,8,1,1,0,4,8,7,7,0,1,9,0,2,7,1},
        {2,5,2,6,7,6,8,0,2,7,6,0,7,8,0,0,3,0,1,3,6,7,8,6,8,0,9,9,2,5,2,5,4,6,3,4,0,1,0,6,1,6,3,2,8,6,6,5,2,6},
        {3,6,2,7,0,2,1,8,5,4,0,4,9,7,7,0,5,5,8,5,6,2,9,9,4,6,5,8,0,6,3,6,2,3,7,9,9,3,1,4,0,7,4,6,2,5,5,9,6,2},
        {2,4,0,7,4,4,8,6,9,0,8,2,3,1,1,7,4,9,7,7,7,9,2,3,6,5,4,6,6,2,5,7,2,4,6,9,2,3,3,2,2,8,1,0,9,1,7,1,4,1},
        {9,1,4,3,0,2,8,8,1,9,7,1,0,3,2,8,8,5,9,7,8,0,6,6,6,9,7,6,0,8,9,2,9,3,8,6,3,8,2,8,5,0,2,5,3,3,3,4,0,3},
        {3,4,4,1,3,0,6,5,5,7,8,0,1,6,1,2,7,8,1,5,9,2,1,8,1,5,0,0,5,5,6,1,8,6,8,8,3,6,4,6,8,4,2,0,0,9,0,4,7,0},
        {2,3,0,5,3,0,8,1,1,7,2,8,1,6,4,3,0,4,8,7,6,2,3,7,9,1,9,6,9,8,4,2,4,8,7,2,5,5,0,3,6,6,3,8,7,8,4,5,8,3},
        {1,1,4,8,7,6,9,6,9,3,2,1,5,4,9,0,2,8,1,0,4,2,4,0,2,0,1,3,8,3,3,5,1,2,4,4,6,2,1,8,1,4,4,1,7,7,3,4,7,0},
        {6,3,7,8,3,2,9,9,4,9,0,6,3,6,2,5,9,6,6,6,4,9,8,5,8,7,6,1,8,2,2,1,2,2,5,2,2,5,5,1,2,4,8,6,7,6,4,5,3,3},
        {6,7,7,2,0,1,8,6,9,7,1,6,9,8,5,4,4,3,1,2,4,1,9,5,7,2,4,0,9,9,1,3,9,5,9,0,0,8,9,5,2,3,1,0,0,5,8,8,2,2},
        {9,5,5,4,8,2,5,5,3,0,0,2,6,3,5,2,0,7,8,1,5,3,2,2,9,6,7,9,6,2,4,9,4,8,1,6,4,1,9,5,3,8,6,8,2,1,8,7,7,4},
        {7,6,0,8,5,3,2,7,1,3,2,2,8,5,7,2,3,1,1,0,4,2,4,8,0,3,4,5,6,1,2,4,8,6,7,6,9,7,0,6,4,5,0,7,9,9,5,2,3,6},
        {3,7,7,7,4,2,4,2,5,3,5,4,1,1,2,9,1,6,8,4,2,7,6,8,6,5,5,3,8,9,2,6,2,0,5,0,2,4,9,1,0,3,2,6,5,7,2,9,6,7},
        {2,3,7,0,1,9,1,3,2,7,5,7,2,5,6,7,5,2,8,5,6,5,3,2,4,8,2,5,8,2,6,5,4,6,3,0,9,2,2,0,7,0,5,8,5,9,6,5,2,2},
        {2,9,7,9,8,8,6,0,2,7,2,2,5,8,3,3,1,9,1,3,1,2,6,3,7,5,1,4,7,3,4,1,9,9,4,8,8,9,5,3,4,7,6,5,7,4,5,5,0,1},
        {1,8,4,9,5,7,0,1,4,5,4,8,7,9,2,8,8,9,8,4,8,5,6,8,2,7,7,2,6,0,7,7,7,1,3,7,2,1,4,0,3,7,9,8,8,7,9,7,1,5},
        {3,8,2,9,8,2,0,3,7,8,3,0,3,1,4,7,3,5,2,7,7,2,1,5,8,0,3,4,8,1,4,4,5,1,3,4,9,1,3,7,3,2,2,6,6,5,1,3,8,1},
        {3,4,8,2,9,5,4,3,8,2,9,1,9,9,9,1,8,1,8,0,2,7,8,9,1,6,5,2,2,4,3,1,0,2,7,3,9,2,2,5,1,1,2,2,8,6,9,5,3,9},
        {4,0,9,5,7,9,5,3,0,6,6,4,0,5,2,3,2,6,3,2,5,3,8,0,4,4,1,0,0,0,5,9,6,5,4,9,3,9,1,5,9,8,7,9,5,9,3,6,3,5},
        {2,9,7,4,6,1,5,2,1,8,5,5,0,2,3,7,1,3,0,7,6,4,2,2,5,5,1,2,1,1,8,3,6,9,3,8,0,3,5,8,0,3,8,8,5,8,4,9,0,3},
        {4,1,6,9,8,1,1,6,2,2,2,0,7,2,9,7,7,1,8,6,1,5,8,2,3,6,6,7,8,4,2,4,6,8,9,1,5,7,9,9,3,5,3,2,9,6,1,9,2,2},
        {6,2,4,6,7,9,5,7,1,9,4,4,0,1,2,6,9,0,4,3,8,7,7,1,0,7,2,7,5,0,4,8,1,0,2,3,9,0,8,9,5,5,2,3,5,9,7,4,5,7},
        {2,3,1,8,9,7,0,6,7,7,2,5,4,7,9,1,5,0,6,1,5,0,5,5,0,4,9,5,3,9,2,2,9,7,9,5,3,0,9,0,1,1,2,9,9,6,7,5,1,9},
        {8,6,1,8,8,0,8,8,2,2,5,8,7,5,3,1,4,5,2,9,5,8,4,0,9,9,2,5,1,2,0,3,8,2,9,0,0,9,4,0,7,7,7,0,7,7,5,6,7,2},
        {1,1,3,0,6,7,3,9,7,0,8,3,0,4,7,2,4,4,8,3,8,1,6,5,3,3,8,7,3,5,0,2,3,4,0,8,4,5,6,4,7,0,5,8,0,7,7,3,0,8},
        {8,2,9,5,9,1,7,4,7,6,7,1,4,0,3,6,3,1,9,8,0,0,8,1,8,7,1,2,9,0,1,1,8,7,5,4,9,1,3,1,0,5,4,7,1,2,6,5,8,1},
        {9,7,6,2,3,3,3,1,0,4,4,8,1,8,3,8,6,2,6,9,5,1,5,4,5,6,3,3,4,9,2,6,3,6,6,5,7,2,8,9,7,5,6,3,4,0,0,5,0,0},
        {4,2,8,4,6,2,8,0,1,8,3,5,1,7,0,7,0,5,2,7,8,3,1,8,3,9,4,2,5,8,8,2,1,4,5,5,2,1,2,2,7,2,5,1,2,5,0,3,2,7},
        {5,5,1,2,1,6,0,3,5,4,6,9,8,1,2,0,0,5,8,1,7,6,2,1,6,5,2,1,2,8,2,7,6,5,2,7,5,1,6,9,1,2,9,6,8,9,7,7,8,9},
        {3,2,2,3,8,1,9,5,7,3,4,3,2,9,3,3,9,9,4,6,4,3,7,5,0,1,9,0,7,8,3,6,9,4,5,7,6,5,8,8,3,3,5,2,3,9,9,8,8,6},
        {7,5,5,0,6,1,6,4,9,6,5,1,8,4,7,7,5,1,8,0,7,3,8,1,6,8,8,3,7,8,6,1,0,9,1,5,2,7,3,5,7,9,2,9,7,0,1,3,3,7},
        {6,2,1,7,7,8,4,2,7,5,2,1,9,2,6,2,3,4,0,1,9,4,2,3,9,9,6,3,9,1,6,8,0,4,4,9,8,3,9,9,3,1,7,3,3,1,2,7,3,1},
        {3,2,9,2,4,1,8,5,7,0,7,1,4,7,3,4,9,5,6,6,9,1,6,6,7,4,6,8,7,6,3,4,6,6,0,9,1,5,0,3,5,9,1,4,6,7,7,5,0,4},
        {9,9,5,1,8,6,7,1,4,3,0,2,3,5,2,1,9,6,2,8,8,9,4,8,9,0,1,0,2,4,2,3,3,2,5,1,1,6,9,1,3,6,1,9,6,2,6,6,2,2},
        {7,3,2,6,7,4,6,0,8,0,0,5,9,1,5,4,7,4,7,1,8,3,0,7,9,8,3,9,2,8,6,8,5,3,5,2,0,6,9,4,6,9,4,4,5,4,0,7,2,4},
        {7,6,8,4,1,8,2,2,5,2,4,6,7,4,4,1,7,1,6,1,5,1,4,0,3,6,4,2,7,9,8,2,2,7,3,3,4,8,0,5,5,5,5,6,2,1,4,8,1,8},
        {9,7,1,4,2,6,1,7,9,1,0,3,4,2,5,9,8,6,4,7,2,0,4,5,1,6,8,9,3,9,8,9,4,2,2,1,7,9,8,2,6,0,8,8,0,7,6,8,5,2},
        {8,7,7,8,3,6,4,6,1,8,2,7,9,9,3,4,6,3,1,3,7,6,7,7,5,4,3,0,7,8,0,9,3,6,3,3,3,3,0,1,8,9,8,2,6,4,2,0,9,0},
        {1,0,8,4,8,8,0,2,5,2,1,6,7,4,6,7,0,8,8,3,2,1,5,1,2,0,1,8,5,8,8,3,5,4,3,2,2,3,8,1,2,8,7,6,9,5,2,7,8,6},
        {7,1,3,2,9,6,1,2,4,7,4,7,8,2,4,6,4,5,3,8,6,3,6,9,9,3,0,0,9,0,4,9,3,1,0,3,6,3,6,1,9,7,6,3,8,7,8,0,3,9},
        {6,2,1,8,4,0,7,3,5,7,2,3,9,9,7,9,4,2,2,3,4,0,6,2,3,5,3,9,3,8,0,8,3,3,9,6,5,1,3,2,7,4,0,8,0,1,1,1,1,6},
        {6,6,6,2,7,8,9,1,9,8,1,4,8,8,0,8,7,7,9,7,9,4,1,8,7,6,8,7,6,1,4,4,2,3,0,0,3,0,9,8,4,4,9,0,8,5,1,4,1,1},
        {6,0,6,6,1,8,2,6,2,9,3,6,8,2,8,3,6,7,6,4,7,4,4,7,7,9,2,3,9,1,8,0,3,3,5,1,1,0,9,8,9,0,6,9,7,9,0,7,1,4},
        {8,5,7,8,6,9,4,4,0,8,9,5,5,2,9,9,0,6,5,3,6,4,0,4,4,7,4,2,5,5,7,6,0,8,3,6,5,9,9,7,6,6,4,5,7,9,5,0,9,6},
        {6,6,0,2,4,3,9,6,4,0,9,9,0,5,3,8,9,6,0,7,1,2,0,1,9,8,2,1,9,9,7,6,0,4,7,5,9,9,4,9,0,1,9,7,2,3,0,2,9,7},
        {6,4,9,1,3,9,8,2,6,8,0,0,3,2,9,7,3,1,5,6,0,3,7,1,2,0,0,4,1,3,7,7,9,0,3,7,8,5,5,6,6,0,8,5,0,8,9,2,5,2},
        {1,6,7,3,0,9,3,9,3,1,9,8,7,2,7,5,0,2,7,5,4,6,8,9,0,6,9,0,3,7,0,7,5,3,9,4,1,3,0,4,2,6,5,2,3,1,5,0,1,1},
        {9,4,8,0,9,3,7,7,2,4,5,0,4,8,7,9,5,1,5,0,9,5,4,1,0,0,9,2,1,6,4,5,8,6,3,7,5,4,7,1,0,5,9,8,4,3,6,7,9,1},
        {7,8,6,3,9,1,6,7,0,2,1,1,8,7,4,9,2,4,3,1,9,9,5,7,0,0,6,4,1,9,1,7,9,6,9,7,7,7,5,9,9,0,2,8,3,0,0,6,9,9},
        {1,5,3,6,8,7,1,3,7,1,1,9,3,6,6,1,4,9,5,2,8,1,1,3,0,5,8,7,6,3,8,0,2,7,8,4,1,0,7,5,4,4,4,9,7,3,3,0,7,8},
        {4,0,7,8,9,9,2,3,1,1,5,5,3,5,5,6,2,5,6,1,1,4,2,3,2,2,4,2,3,2,5,5,0,3,3,6,8,5,4,4,2,4,8,8,9,1,7,3,5,3},
        {4,4,8,8,9,9,1,1,5,0,1,4,4,0,6,4,8,0,2,0,3,6,9,0,6,8,0,6,3,9,6,0,6,7,2,3,2,2,1,9,3,2,0,4,1,4,9,5,3,5},
        {4,1,5,0,3,1,2,8,8,8,0,3,3,9,5,3,6,0,5,3,2,9,9,3,4,0,3,6,8,0,0,6,9,7,7,7,1,0,6,5,0,5,6,6,6,3,1,9,5,4},
        {8,1,2,3,4,8,8,0,6,7,3,2,1,0,1,4,6,7,3,9,0,5,8,5,6,8,5,5,7,9,3,4,5,8,1,4,0,3,6,2,7,8,2,2,7,0,3,2,8,0},
        {8,2,6,1,6,5,7,0,7,7,3,9,4,8,3,2,7,5,9,2,2,3,2,8,4,5,9,4,1,7,0,6,5,2,5,0,9,4,5,1,2,3,2,5,2,3,0,6,0,8},
        {2,2,9,1,8,8,0,2,0,5,8,7,7,7,3,1,9,7,1,9,8,3,9,4,5,0,1,8,0,8,8,8,0,7,2,4,2,9,6,6,1,9,8,0,8,1,1,1,9,7},
        {7,7,1,5,8,5,4,2,5,0,2,0,1,6,5,4,5,0,9,0,4,1,3,2,4,5,8,0,9,7,8,6,8,8,2,7,7,8,9,4,8,7,2,1,8,5,9,6,1,7},
        {7,2,1,0,7,8,3,8,4,3,5,0,6,9,1,8,6,1,5,5,4,3,5,6,6,2,8,8,4,0,6,2,2,5,7,4,7,3,6,9,2,2,8,4,5,0,9,5,1,6},
        {2,0,8,4,9,6,0,3,9,8,0,1,3,4,0,0,1,7,2,3,9,3,0,6,7,1,6,6,6,8,2,3,5,5,5,2,4,5,2,5,2,8,0,4,6,0,9,7,2,2},
        {5,3,5,0,3,5,3,4,2,2,6,4,7,2,5,2,4,2,5,0,8,7,4,0,5,4,0,7,5,5,9,1,7,8,9,7,8,1,2,6,4,3,3,0,3,3,1,6,9,0},
    };
    
    vector <int> v1;
    unsigned short int toplam = 0, temp = 0, kalan = 0;
    
    for (int i = 49; i>=0; i--) // sutun
    {
        int j = 0;
        for (; j < 100; j++) // satir
        {
            toplam += x[j][i];
        }
        
        toplam += kalan;
        cout << toplam << endl;
        if (i + 99 == 99)
        {
            cout << "sayac" << endl;
      
            v1.push_back(toplam);
            break;
        }
       
        temp = toplam % 10;
        v1.push_back(temp);
        toplam -= temp;
        toplam /= 10;
        kalan = toplam;
        
        toplam = 0;
    }
    
    for (int i = v1.size()-1 ; i >= 0; i--)
    {
        cout << v1[i];
    }
 */
    //---------------------------------------------------------------
    // soru 14

   
    /*while (n < 1000000)
    {
        Collatz();
    }
    
    unsigned int eb = v1[0];

    for (int i = 0; i < v1.size(); i++)
    {
        if (v1[i] > eb)
        {
            eb = v1[i];
            temp = i+2;
        }
    }
    cout << temp << " " << eb << endl;*/

    //---------------------------------------------------------------

    // soru 16 

    //---------------------------------------------------------------
    
    // soru 17
    
    //Voku();

    //---------------------------------------------------------------
    
    // soru 18
                    
    //Big();

    //---------------------------------------------------------------

    // soru 19

    //Monday();

    //---------------------------------------------------------------

    // soru 21
    
   /* unsigned long int T = 0, k;
    for (int i = 1; i < 10000; i++)
    {
        k = Bagdasik(i);
        if (Bagdasik(k) == i && i != k)
        {
            
            cout << k << " - " << i << endl;
            T += (i + k);
        }
    }
    cout << "Toplam : " << T/2 << endl;
    */
    
    //----------------------------------------------------------------
   
    // soru 22 
    
   /* NameScore();
   NameScore_2();*/

    //----------------------------------------------------------------

    // soru 23
    
ResidualNumberDividing();
ResiDualNumberEnd();
cout << "\n" << ResiDualNumberEndTotal() << endl;






    return 0;
    
}        